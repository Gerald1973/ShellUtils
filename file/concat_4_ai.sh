#!/bin/bash

# Script Name: concatenate_files.sh
# Description: Recursively concatenates text files of specific formats from a given directory
#              into a single output file with an index for Complexity.ai spaces.
# Usage: ./concatenate_files.sh <directory_path> <output_file>
# Parameters:
#   - directory_path: The root directory to search for files recursively
#   - output_file: The name of the output file where concatenated content will be saved

# Check if the correct number of arguments is provided
if [ $# -ne 2 ]; then
    echo "Error: Incorrect number of arguments."
    echo "Usage: $0 <directory_path> <output_file>"
    exit 1
fi

# Assign arguments to variables
DIR_PATH="$1"
OUTPUT_FILE="$2"

# Check if the provided directory exists
if [ ! -d "$DIR_PATH" ]; then
    echo "Error: Directory '$DIR_PATH' does not exist."
    exit 1
fi

# Define the file extensions to include
EXTENSIONS=""
EXTENSIONS="${EXTENSIONS} adoc asm asp aspx atom"
EXTENSIONS="${EXTENSIONS} awk bat bib c cfg"
EXTENSIONS="${EXTENSIONS} clj cljs cmd coffee conf"
EXTENSIONS="${EXTENSIONS} cpp cs css csv dart"
EXTENSIONS="${EXTENSIONS} diff dockerfile edn el elm"
EXTENSIONS="${EXTENSIONS} env erb erl ex exs"
EXTENSIONS="${EXTENSIONS} fs go gql gradle groovy"
EXTENSIONS="${EXTENSIONS} h haml hbs hcl hpp"
EXTENSIONS="${EXTENSIONS} hrl hs htm html inc"
EXTENSIONS="${EXTENSIONS} ini ipynb java js json"
EXTENSIONS="${EXTENSIONS} jsp jsx kt kts less"
EXTENSIONS="${EXTENSIONS} lhs lisp litcoffee log lua"
EXTENSIONS="${EXTENSIONS} m makefile markdown md ml"
EXTENSIONS="${EXTENSIONS} org patch php pl pm"
EXTENSIONS="${EXTENSIONS} po properties proto ps1 pug"
EXTENSIONS="${EXTENSIONS} py r R rb rmd"
EXTENSIONS="${EXTENSIONS} rs rst sass scala scss"
EXTENSIONS="${EXTENSIONS} sh sql svelte swift tex"
EXTENSIONS="${EXTENSIONS} toml ts tsv tsx txt"
EXTENSIONS="${EXTENSIONS} vb vue xml yaml yml"

# Create or overwrite the output file
> "$OUTPUT_FILE"

# Write a header for the output file
echo "===== Concatenated Files for ai Spaces =====
Generated on: $(date)
Source Directory: $DIR_PATH
==============================================
" >> "$OUTPUT_FILE"

# Initialize an index section
echo "===== Index of Files =====
Below is the list of all concatenated files with their relative paths:
" >> "$OUTPUT_FILE"

# Counter for index numbering
COUNTER=1

# Temporary file to store the index content (will be appended later)
INDEX_TEMP=$(mktemp)

# Find and process files with specified extensions
while IFS= read -r -d '' FILE; do
    # Get the file extension
    EXT="${FILE##*.}"
    # Check if the extension matches the allowed list
    if echo "$EXTENSIONS" | grep -q -w "$EXT"; then
        # Get the relative path of the file from the root directory
        REL_PATH="${FILE#$DIR_PATH/}"
        # Add to index with numbering
        echo "$COUNTER. $REL_PATH" >> "$INDEX_TEMP"
        # Increment counter
        ((COUNTER++))
    fi
done < <(find "$DIR_PATH" -type f -print0)

# Append the index content to the output file
cat "$INDEX_TEMP" >> "$OUTPUT_FILE"
rm "$INDEX_TEMP"

# Add a separator after the index
echo "
==============================================
===== Concatenated Content =====
" >> "$OUTPUT_FILE"

# Reset counter for content numbering
COUNTER=1

# Find and concatenate the content of matching files
while IFS= read -r -d '' FILE; do
    # Get the file extension
    EXT="${FILE##*.}"
    # Check if the extension matches the allowed list
    if echo "$EXTENSIONS" | grep -q -w "$EXT"; then
        # Get the relative path of the file from the root directory
        REL_PATH="${FILE#$DIR_PATH/}"
        # Write a header for the file content
        echo "----- File $COUNTER: $REL_PATH -----" >> "$OUTPUT_FILE"
        # Append the file content
        cat "$FILE" >> "$OUTPUT_FILE"
        # Add a footer/separator after the content
        echo "
----- End of File $COUNTER -----
" >> "$OUTPUT_FILE"
        # Increment counter
        ((COUNTER++))
    fi
done < <(find "$DIR_PATH" -type f -print0)

# Write a footer for the output file
echo "==============================================
End of Concatenated Content
Generated by concatenate_files.sh
==============================================" >> "$OUTPUT_FILE"

echo "Success: All matching files have been concatenated into '$OUTPUT_FILE'."
echo "Total files processed: $((COUNTER-1))"
